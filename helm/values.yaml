# Name of service
nameOverride: ""
fullnameOverride: ""

# Number of pods to deploy
replicaCount: 1

# Docker container to deploy
image:
  repository: "hypertrace/schema-registry"
  pullPolicy: "IfNotPresent"

imagePullSecrets: []

configurationOverrides: {}
customEnv: {}
schemaRegistryOpts: {}
overrideGroupId: ""
kafka:
  protocol: "PLAINTEXT"
  bootstrapServers: ""

# Schema registry JVM Heap Option
heapOptions: "-Xms128M -Xmx200M"

# Avro Compatibility  Level
avroCompatibilityLevel: "full_transitive"

# Resources requested by pod
resources:
  requests:
    cpu: "0.25"
    memory: "256Mi"

# livenes probe on http port
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

# readiness probe on http port
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

# upgrade strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

podAnnotations: {}

podLabels: {}

terminationGracePeriodSeconds: 30

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}

serviceAccount:
  create: false
  name: ""

service:
  port: 8081
  ## Service type can be set to ClusterIP, NodePort or LoadBalancer.
  type: ClusterIP
  ## Service annotations
  annotations: {}
  loadBalancerSourceRanges: []

# Ingress Resource
ingress:
  enabled: false
  ## Ingress hostnames
  ## Must be provided if Ingress is enabled
  hosts:
    - paths:
        - path: "/schema-registry"

## Monitoring
## Schema Registry JMX Settings
## ref: https://docs.confluent.io/current/schema-registry/docs/monitoring.html
jmx:
  enabled: false
  port: 5555

## Prometheus Exporter Configuration
## ref: https://prometheus.io/docs/instrumenting/exporters/
prometheus:
  ## JMX Exporter Configuration
  ## ref: https://github.com/prometheus/jmx_exporter
  jmx:
    enabled: false
    image:
      repository: solsson/kafka-prometheus-jmx-exporter@sha256
      tag: 6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
      pullPolicy: IfNotPresent
    port: 5556
    resources:
      requests:
        cpu: "0.25"
        memory: "256Mi"

backup:
  enabled: false
  topic: "_schemas"
  schedule: "0 1 * * *"
  startingDeadlineSeconds: 86400
  concurrencyPolicy: Forbid
  image:
    repository: "hypertrace/kafka"
    tag: "0.1.0"
    pullPolicy: "IfNotPresent"
  imagePullSecrets: []
  cluster: "test"
  gcloud: {}
  affinity: {}
  nodeSelector: {}
  securityContext: {}
  tolerations: []
  podAnnotations: {}
  podLabels: {}

servicemonitor:
  enabled: false
  interval: 15s
  secure: false
  tlsConfig: {}
